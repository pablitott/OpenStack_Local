
# -*- mode: ruby -*-
# vi: set ft=ruby :
# for vm status = Guru Meditation run

# vboxmanage startvm <vm-name> --type emergencystop

#vbguest issues : https://github.com/dotless-de/vagrant-vbguest
#source https://github.com/christianb93/openstack-labs
# instructions: https://leftasexercise.com/2020/01/27/setting-up-our-openstack-playground/


# -*- mode: ruby -*-
# vi: set ft=ruby :


Vagrant.configure("2") do |config|

  # Uncomment this if you want to bring up
  # the  machines with a GUI
  #config.vm.provider "virtualbox" do |v|
  #  v.gui = true
  #end
  home_dir="/home/vagrant"

  config.vm.define "AnsibleHost" do |host|
    host.vm.hostname = "AnsibleHost.local"
    host.vm.box = "ubuntu/bionic64"
    host.vm.provision "ansible286", type: "shell", path: "bootstrap.sh", privileged: true
    host.vm.network "private_network", ip: "192.168.100.9", name: "VirtualBox Host-Only Ethernet Adapter #2"
    # TODO: is not working yet
    host.vm.synced_folder  "../../OpenStack_Local/AnsibleHost", "/home/vagrant/AnsibleHost", owner: "vagrant"  #, mount_options: ["dmode=775,fmode=777"]

    # host.vm.synced_folder  "../VagrantHost/ansible", "/etc/ansible", owner: "vagrant"  #, mount_options: ["dmode=775,fmode=777"]

    # upload private keys created by vagrant, check to change using vagrant loops
    host.vm.provision "file", source: ".vagrant/machines/controller/virtualbox/private_key", destination: "#{home_dir}/.ssh/machines/controller/virtualbox/private_key"
    host.vm.provision "file", source: ".vagrant/machines/compute1/virtualbox/private_key", destination: "#{home_dir}/.ssh/machines/compute1/virtualbox/private_key"
    host.vm.provision "file", source: ".vagrant/machines/compute2/virtualbox/private_key", destination: "#{home_dir}/.ssh/machines/compute2/virtualbox/private_key"
    host.vm.provision "file", source: "./ssh-config", destination: "#{home_dir}/.ssh/config"

    host.vm.provision "shell", inline: "chmod 600 $(find #{home_dir}/.ssh/machines -type f -name 'private_key')"
    host.vm.provision "shell", inline: "chmod 700 $(find #{home_dir}/.ssh/machines -type d)"

    # copy the content of ansible.cfg to /etc/ansible
    host.vm.provision "file", source: "./ansible/ansible.cfg", destination: "#{home_dir}/.ansible.cfg"  
    host.vm.provision "file", source: "./ansible/hosts.ini", destination: "#{home_dir}/hosts.ini" 
    host.vm.provision "shell", inline: "chmod 600 #{home_dir}/hosts.ini", privileged: true 
    host.vm.provision "shell", inline: "chmod 600 #{home_dir}/.ansible.cfg", privileged: true


    host.vm.provider "virtualbox" do |v|
      v.name   = "AnsibleHost"
      v.memory = 6144
      v.cpus = 1
    end
  end


  config.vm.define "controller" do |node|
    node.vm.hostname = "controller.local" 
    node.vm.box = "ubuntu/bionic64"
    node.vm.network "private_network", ip: "192.168.100.11", name: "VirtualBox Host-Only Ethernet Adapter #2"
    # This configuration assumes that we have already created two hostonly networks called vboxnet0 and vboxnet1
    # If this has not been done, please run the script ../scripts/createVBoxNetworks.sh
    # as auto_config is set to false, VirtualBox should not actually assign IP addresses
    node.vm.network "private_network", ip: "172.16.0.2",  auto_config: false, name: "VirtualBox Host-Only Ethernet Adapter #3"
    # node.vm.network "forwarded_port", guest: 22, host: 8222, hostname: true, ip: "192.168.100.11"

    node.vm.provider "virtualbox" do |v|
      v.customize ["modifyvm", :id, "--nicpromisc2", "allow-all"]
      v.customize ["modifyvm", :id, "--nicpromisc3", "allow-all"]
      v.name   = "controller"
      v.memory = 6144
      v.cpus = 2
    end
  end

  config.vm.define "compute1" do |node|
    node.vm.hostname = "compute1.local"
    node.vm.box = "ubuntu/bionic64"
    node.vm.network "private_network", ip: "192.168.100.21", name: "VirtualBox Host-Only Ethernet Adapter #2"
    node.vm.network "private_network", ip: "172.16.0.3",  auto_config: false, name: "VirtualBox Host-Only Ethernet Adapter #3"
    # node.vm.network "forwarded_port", guest: 22, host: 8232
    node.vm.provider "virtualbox" do |v|
      v.customize ["modifyvm", :id, "--nicpromisc2", "allow-all"]
      v.customize ["modifyvm", :id, "--nicpromisc3", "allow-all"]
      v.name   = "compute1"
      v.memory = 4096
      v.cpus = 2
    end
  end

  config.vm.define "compute2" do |node|
    node.vm.hostname = "compute2.local"
    node.vm.box = "ubuntu/bionic64"
    node.vm.network "private_network", ip: "192.168.100.22", name: "VirtualBox Host-Only Ethernet Adapter #2"
    node.vm.network "private_network", ip: "172.16.0.100",  auto_config: false, name: "VirtualBox Host-Only Ethernet Adapter #3"
    # node.vm.network "forwarded_port", guest: 22, host: 8242
    node.vm.provider "virtualbox" do |v|
      v.customize ["modifyvm", :id, "--nicpromisc2", "allow-all"]
      v.customize ["modifyvm", :id, "--nicpromisc3", "allow-all"]
      v.name   = "compute2"
      v.memory = 4096
      v.cpus = 2
    end
  end


end