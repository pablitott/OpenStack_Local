
# -*- mode: ruby -*-
# vi: set ft=ruby :
# for vm status = Guru Meditation run

# vboxmanage startvm <vm-name> --type emergencystop

#vbguest issues : https://github.com/dotless-de/vagrant-vbguest
#source https://github.com/christianb93/openstack-labs
# instructions: https://leftasexercise.com/2020/01/27/setting-up-our-openstack-playground/


# -*- mode: ruby -*-
# vi: set ft=ruby :


Vagrant.configure("2") do |config|

  # Uncomment this if you want to bring up
  # the  machines with a GUI
  #config.vm.provider "virtualbox" do |v|
  #  v.gui = true
  #end
  config.vm.define "myHost" do |myHost|
    myHost.vm.hostname = "host.local"
    myHost.vm.box = "ubuntu/bionic64"
    myHost.vm.provision "ansible286", type: "shell", path: "bootstrap.sh", privileged: true
    myHost.vm.network "private_network", ip: "192.168.3.125", name: "VirtualBox Host-Only Ethernet Adapter"

    # myHost.vm.synced_folder  "../", "/home/vagrant/ansible", owner: "vagrant", mount_options: ["dmode=775,fmode=777"]
    myHost.vm.synced_folder  "../", "/home/vagrant/source", owner: "vagrant"  #, mount_options: ["dmode=775,fmode=777"]
    myHost.vm.provider "virtualbox" do |v|
      # v.customize ["modifyvm", :id, "--nicpromisc2", "allow-all"]
      # v.customize ["modifyvm", :id, "--nicpromisc3", "allow-all"]
      v.name   = "myHost"
      v.memory = 6144
      v.cpus = 2
    end
  end


  config.vm.define "controller" do |controller|
    controller.vm.hostname = "controller"
    controller.vm.box = "ubuntu/bionic64"
    controller.vm.network "private_network", ip: "192.168.100.11", name: "VirtualBox Host-Only Ethernet Adapter #6"
    # This configuration assumes that we have already created two hostonly networks called vboxnet0 and vboxnet1
    # If this has not been done, please run the script ../scripts/createVBoxNetworks.sh
    # as auto_config is set to false, VirtualBox should not actually assign IP addresses
    controller.vm.network "private_network", ip: "172.16.0.2",  auto_config: false, name: "VirtualBox Host-Only Ethernet Adapter #7"
    controller.vm.network "forwarded_port", guest: 22, host: 8222
    controller.vm.synced_folder  "../", "/home/vagrant/ansible", owner: "vagrant" #, mount_options: ["dmode=775,fmode=700"]
    controller.vm.provider "virtualbox" do |v|
      v.customize ["modifyvm", :id, "--nicpromisc2", "allow-all"]
      v.customize ["modifyvm", :id, "--nicpromisc3", "allow-all"]
      v.name   = "Lab1_controller"
      v.memory = 6144
      v.cpus = 2
    end
  end

  config.vm.define "compute1" do |compute1|
    compute1.vm.hostname = "compute1"
    compute1.vm.box = "ubuntu/bionic64"
    compute1.vm.network "private_network", ip: "192.168.100.21", name: "VirtualBox Host-Only Ethernet Adapter #6"
    compute1.vm.network "private_network", ip: "172.16.0.3",  auto_config: false, name: "VirtualBox Host-Only Ethernet Adapter #7"
    compute1.vm.network "forwarded_port", guest: 22, host: 8200
    compute1.vm.provider "virtualbox" do |v|
      v.customize ["modifyvm", :id, "--nicpromisc2", "allow-all"]
      v.customize ["modifyvm", :id, "--nicpromisc3", "allow-all"]
      v.name   = "Lab1_compute1"
      v.memory = 4096
      v.cpus = 2
    end
  end

  config.vm.define "compute2" do |compute2|
    compute2.vm.hostname = "compute2"
    compute2.vm.box = "ubuntu/bionic64"
    compute2.vm.network "private_network", ip: "192.168.100.22", name: "VirtualBox Host-Only Ethernet Adapter #6"
    compute2.vm.network "private_network", ip: "172.16.0.3",  auto_config: false, name: "VirtualBox Host-Only Ethernet Adapter #7"
    compute2.vm.network "forwarded_port", guest: 22, host: 8201
    compute2.vm.provider "virtualbox" do |v|
      v.customize ["modifyvm", :id, "--nicpromisc2", "allow-all"]
      v.customize ["modifyvm", :id, "--nicpromisc3", "allow-all"]
      v.name   = "Lab1_compute2"
      v.memory = 4096
      v.cpus = 2
    end
  end


end